"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/chakra/theme.js":
/*!*****************************!*\
  !*** ./src/chakra/theme.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"theme\": function() { return /* binding */ theme; }\n/* harmony export */ });\n/* harmony import */ var _fontsource_open_sans_300_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fontsource/open-sans/300.css */ \"./node_modules/@fontsource/open-sans/300.css\");\n/* harmony import */ var _fontsource_open_sans_300_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_fontsource_open_sans_300_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _fontsource_open_sans_400_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fontsource/open-sans/400.css */ \"./node_modules/@fontsource/open-sans/400.css\");\n/* harmony import */ var _fontsource_open_sans_400_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_fontsource_open_sans_400_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _fontsource_open_sans_700_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fontsource/open-sans/700.css */ \"./node_modules/@fontsource/open-sans/700.css\");\n/* harmony import */ var _fontsource_open_sans_700_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_fontsource_open_sans_700_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/index.mjs\");\n// Import font sources\n\n\n\n// Import `extendTheme`\n\n// Call `extendTheme` and pass your custom values\nconst theme = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.extendTheme)({\n    colors: {\n        brand: {\n            100: \"FF3c00\"\n        }\n    },\n    fonts: {\n        body: \"Open Sans, sans-serif\"\n    },\n    styles: {\n        global: ()=>({\n                body: {\n                    bg: \"gray.200\"\n                }\n            })\n    },\n    components: {\n    }\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY2hha3JhL3RoZW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsc0JBQXNCO0FBQ2dCO0FBQ0E7QUFDQTtBQUN0Qyx1QkFBdUI7QUFDdUI7QUFFOUMsaURBQWlEO0FBQzFDLE1BQU1DLFFBQVFELDZEQUFXQSxDQUFDO0lBQy9CRSxRQUFRO1FBQ05DLE9BQU87WUFDTCxLQUFLO1FBQ1A7SUFDRjtJQUNBQyxPQUFPO1FBQ0xDLE1BQU07SUFDUjtJQUNBQyxRQUFRO1FBQ05DLFFBQVEsSUFBTztnQkFDWEYsTUFBTTtvQkFDRkcsSUFBSTtnQkFDUjtZQUNKO0lBQ0Y7SUFDQUMsWUFBWTtJQUVaO0FBQ0YsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY2hha3JhL3RoZW1lLmpzPzNiOGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0IGZvbnQgc291cmNlc1xuaW1wb3J0IFwiQGZvbnRzb3VyY2Uvb3Blbi1zYW5zLzMwMC5jc3NcIlxuaW1wb3J0IFwiQGZvbnRzb3VyY2Uvb3Blbi1zYW5zLzQwMC5jc3NcIlxuaW1wb3J0IFwiQGZvbnRzb3VyY2Uvb3Blbi1zYW5zLzcwMC5jc3NcIlxuLy8gSW1wb3J0IGBleHRlbmRUaGVtZWBcbmltcG9ydCB7IGV4dGVuZFRoZW1lIH0gZnJvbSBcIkBjaGFrcmEtdWkvcmVhY3RcIlxuXG4vLyBDYWxsIGBleHRlbmRUaGVtZWAgYW5kIHBhc3MgeW91ciBjdXN0b20gdmFsdWVzXG5leHBvcnQgY29uc3QgdGhlbWUgPSBleHRlbmRUaGVtZSh7XG4gIGNvbG9yczoge1xuICAgIGJyYW5kOiB7XG4gICAgICAxMDA6IFwiRkYzYzAwXCIsIC8vIHJlZGRpdCBvcmFuZ2VcbiAgICB9LFxuICB9LFxuICBmb250czoge1xuICAgIGJvZHk6IFwiT3BlbiBTYW5zLCBzYW5zLXNlcmlmXCIsXG4gIH0sXG4gIHN0eWxlczoge1xuICAgIGdsb2JhbDogKCkgPT4gKHtcbiAgICAgICAgYm9keToge1xuICAgICAgICAgICAgYmc6IFwiZ3JheS4yMDBcIixcbiAgICAgICAgfSxcbiAgICB9KSxcbiAgfSxcbiAgY29tcG9uZW50czoge1xuICAgIC8vIEJ1dHRvblxuICB9XG59KTtcblxuIl0sIm5hbWVzIjpbImV4dGVuZFRoZW1lIiwidGhlbWUiLCJjb2xvcnMiLCJicmFuZCIsImZvbnRzIiwiYm9keSIsInN0eWxlcyIsImdsb2JhbCIsImJnIiwiY29tcG9uZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/chakra/theme.js\n"));

/***/ })

});